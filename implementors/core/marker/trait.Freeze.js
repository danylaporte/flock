(function() {var implementors = {};
implementors["flock"] = [{"text":"impl&lt;'a, E, I, V&gt; Freeze for <a class=\"struct\" href=\"flock/iter/struct.EntityIter.html\" title=\"struct flock::iter::EntityIter\">EntityIter</a>&lt;'a, E, I, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["flock::iter::EntityIter"]},{"text":"impl&lt;'a, MANY&gt; Freeze for <a class=\"struct\" href=\"flock/iter/struct.ManyIter.html\" title=\"struct flock::iter::ManyIter\">ManyIter</a>&lt;'a, MANY&gt;","synthetic":true,"types":["flock::iter::ManyIter"]},{"text":"impl&lt;L, R&gt; Freeze for <a class=\"struct\" href=\"flock/many_to_many/struct.ManyToMany.html\" title=\"struct flock::many_to_many::ManyToMany\">ManyToMany</a>&lt;L, R&gt;","synthetic":true,"types":["flock::many_to_many::ManyToMany"]},{"text":"impl&lt;ONE, MANY&gt; Freeze for <a class=\"struct\" href=\"flock/one_to_many/struct.OneToMany.html\" title=\"struct flock::one_to_many::OneToMany\">OneToMany</a>&lt;ONE, MANY&gt;","synthetic":true,"types":["flock::one_to_many::OneToMany"]},{"text":"impl&lt;'a, ONE, MANY&gt; Freeze for <a class=\"struct\" href=\"flock/one_to_many/struct.OneIter.html\" title=\"struct flock::one_to_many::OneIter\">OneIter</a>&lt;'a, ONE, MANY&gt;","synthetic":true,"types":["flock::one_to_many::OneIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"flock/vec_opt/struct.VecOpt.html\" title=\"struct flock::vec_opt::VecOpt\">VecOpt</a>&lt;T&gt;","synthetic":true,"types":["flock::vec_opt::VecOpt"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"flock/vec_opt/struct.Iter.html\" title=\"struct flock::vec_opt::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["flock::vec_opt::Iter"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()