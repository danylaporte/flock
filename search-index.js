var searchIndex = JSON.parse('{\
"flock":{"doc":"","t":[0,8,11,3,3,11,0,3,11,11,11,0,3,11,11,11,3,11,0,3,11,11,11,11,11,11,11,11,11,3,8,10,24,3,8,10,8,10,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,11,11,11,11,11,11,11,11,11,11],"n":["iter","FlockIter","entities","EntityIter","ManyIter","is_empty","many_to_many","ManyToMany","contains_left_right","iter_left_by","iter_right_by","one_to_many","OneToMany","contains_one_many","iter","iter_by","OneIter","is_empty","vec_opt","VecOpt","clear","get","get_mut","insert","is_empty","iter","len","remove","take","Iter","EntityBy","entity_by","EntityId","OnceCell","SetTag","set_tag","TryEntityIdFromUuid","try_entity_id_from_uuid","Uuid","from","into","into_iter","try_from","borrow","borrow_mut","try_into","type_id","vzip","init","deref","deref_mut","drop","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","vzip","init","deref","deref_mut","drop","from","into","try_from","borrow","borrow_mut","try_into","type_id","vzip","init","deref","deref_mut","drop","from","into","try_from","borrow","borrow_mut","try_into","type_id","vzip","init","deref","deref_mut","drop","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","vzip","init","deref","deref_mut","drop","from","into","try_from","borrow","borrow_mut","try_into","type_id","vzip","init","deref","deref_mut","drop","from","into","into_iter","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","vzip","init","deref","deref_mut","drop","from","from","into","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","equivalent","vzip","init","deref","deref_mut","drop","from","into","to_owned","clone_into","to_string","try_from","borrow","borrow_mut","try_into","type_id","equivalent","vzip","init","deref","deref_mut","drop","default","eq","fmt","from","clone","eq","ne","cmp","from_str","fmt","hash","partial_cmp","deserialize","fmt","default","serialize","clone","fmt","fmt","next","next","next","next","size_hint","count","clone","clone","clone","default","from_iter","from_iter","from_iter","new","get","get_mut","get_unchecked","set","get_or_init","get_or_try_init","take","into_inner","nil","from_fields","from_fields_le","from_u128","from_u128_le","from_slice","from_bytes","parse_str","to_hyphenated","to_hyphenated_ref","to_simple","to_simple_ref","to_urn","to_urn_ref","new_v4","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","get_variant","get_version_num","get_version","as_fields","to_fields_le","as_u128","to_u128_le","as_bytes","is_nil","encode_buffer"],"q":["flock","flock::iter","","","","","flock","flock::many_to_many","","","","flock","flock::one_to_many","","","","","","flock","flock::vec_opt","","","","","","","","","","","flock","","","","","","","","","flock::iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","flock::many_to_many","","","","","","","","","","","","flock::one_to_many","","","","","","","","","","","","","","","","","","","","","","","","","","","flock::vec_opt","","","","","","","","","","","","","","","","","","","","","","","","","","","flock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","flock::iter","","flock::one_to_many","flock::vec_opt","","","flock::iter","flock::one_to_many","flock::vec_opt","","flock::many_to_many","flock::one_to_many","flock::vec_opt","flock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transform a tuple into an EntityId.","A thread-safe cell which can be written to only once.","","","","","A Universally Unique Identifier (UUID).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new empty cell.","Gets the reference to the underlying value.","Gets the mutable reference to the underlying value.","Get the reference to the underlying value, without …","Sets the contents of this cell to <code>value</code>.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Takes the value out of this <code>OnceCell</code>, moving it back to …","Consumes the <code>OnceCell</code>, returning the wrapped value. …","The ‘nil UUID’.","Creates a UUID from four field values in big-endian order.","Creates a UUID from four field values in little-endian …","Creates a UUID from a 128bit value in big-endian order.","Creates a UUID from a 128bit value in little-endian order.","Creates a UUID using the supplied big-endian bytes.","Creates a UUID using the supplied big-endian bytes.","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","Get a <code>Hyphenated</code> formatter.","Get a borrowed <code>HyphenatedRef</code> formatter.","Get a <code>Simple</code> formatter.","Get a borrowed <code>SimpleRef</code> formatter.","Get a <code>Urn</code> formatter.","Get a borrowed <code>UrnRef</code> formatter.","Creates a random UUID.","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","Returns the variant of the UUID structure.","Returns the version number of the UUID.","Returns the version of the UUID.","Returns the four field values of the UUID in big-endian …","Returns the four field values of the UUID in …","Returns a 128bit value containing the UUID data.","Returns a 128bit little-endian value containing the UUID …","Returns an array of 16 octets containing the UUID data.","Tests if the UUID is nil.","A buffer that can be used for <code>encode_...</code> calls, that is …"],"i":[0,0,1,0,0,2,0,0,3,3,3,0,0,4,4,4,0,5,0,0,6,6,6,6,6,6,6,6,6,0,0,7,0,0,0,8,0,9,0,10,10,10,10,10,10,10,10,10,10,10,10,10,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,2,5,11,11,11,2,5,11,6,3,4,6,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13],"f":[null,null,[[],["entityiter",3]],null,null,[[],["bool",15]],null,null,[[],["bool",15]],[[],["manyiter",3]],[[],["manyiter",3]],null,null,[[],["bool",15]],[[],["oneiter",3]],[[],["manyiter",3]],null,[[],["bool",15]],null,null,[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]]],[[],["bool",15]],[[],["iter",3]],[[],["usize",15]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],null,null,[[],["option",4]],null,null,null,[[["versiontag",3]]],null,[[["uuid",3]],["option",4]],null,[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["oncecell",3]],[[["oncecell",3]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[],["oncecell",3]],[[],["oncecell",3]],[[["uuid",3]],["bool",15]],[[["uuid",3]],["bool",15]],[[["uuid",3]],["ordering",4]],[[["str",15]],[["result",4],["uuid",3]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[["uuid",3]],[["option",4],["ordering",4]]],[[],[["result",4],["uuid",3]]],[[["formatter",3]],[["error",3],["result",4]]],[[],["uuid",3]],[[],["result",4]],[[],["uuid",3]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["oncecell",3]],[[],["option",4]],[[],["option",4]],[[]],[[],["result",4]],[[]],[[],["result",4]],[[],["option",4]],[[],["option",4]],[[],["uuid",3]],[[["u32",15],["u16",15]],[["result",4],["error",3],["uuid",3]]],[[["u32",15],["u16",15]],[["result",4],["error",3],["uuid",3]]],[[["u128",15]],["uuid",3]],[[["u128",15]],["uuid",3]],[[],[["result",4],["error",3],["uuid",3]]],[[],["uuid",3]],[[["str",15]],[["result",4],["error",3],["uuid",3]]],[[],["hyphenated",3]],[[],["hyphenatedref",3]],[[],["simple",3]],[[],["simpleref",3]],[[],["urn",3]],[[],["urnref",3]],[[],["uuid",3]],null,null,null,null,[[],[["variant",4],["option",4]]],[[],["usize",15]],[[],[["option",4],["version",4]]],[[]],[[]],[[],["u128",15]],[[],["u128",15]],[[]],[[],["bool",15]],[[]]],"p":[[8,"FlockIter"],[3,"ManyIter"],[3,"ManyToMany"],[3,"OneToMany"],[3,"OneIter"],[3,"VecOpt"],[8,"EntityBy"],[8,"SetTag"],[8,"TryEntityIdFromUuid"],[3,"EntityIter"],[3,"Iter"],[3,"OnceCell"],[3,"Uuid"]]}\
}');
initSearch(searchIndex);